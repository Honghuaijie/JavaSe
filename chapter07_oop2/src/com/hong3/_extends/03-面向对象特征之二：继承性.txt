面向对象特征之二：继承性

1.继承性的理解

>生活上：财产的继承、颜值的继承
>代码层面：
    >自上而下：定义了一个类A，在定义类一个类B时，发现类B的功能与类A相似，考虑类B继承类A
    >自下而上：定义了类B、C、D等，发现B、C、D有类似的属性和方法，则可以考虑将相同的属性和方法进行抽取，
    封装到类A中，让 B,C,D继承与类A，同时BCD中相似的功能就不需要去声明了


2.继承性的好处

-继承性的出现减少了代码冗余，提高了代码的复用性。
-继承的出现有利于功能的扩展。
-继承的出现让类与类之间产生了‘is-a’的关系，为多态的使用提供了前提。
    -继承描述了事件之间的所属关系，这种关系是：‘is-a’的关系。可见，父类更通用、更一般，子类更具体

3.继承的格式：
class A{
}

class B extends A{

}

继承中的基本概念：
A类：父类、superclass、超类、基类
B类：子类、subclass、派生类

4.有了继承性之后：
>子类就有了父类声明的所有属性和方法
>但是由于封装性的影响，可能子类不能直接调用父类中声明的属性和方法
>子类在继承父类以后，还可以拓展自己特有的功能（体现：增加特有的属性、方法）
extends: 延展，扩展
子类和父类的理解,要区别与集合和子集
>不要为了继承而继承，在继承之前是否有is a的关系

5.默认的父类
java.lang.Object

6.补充说明：
>Java是支持多层继承
   >概念：直接父类、间接父类
>Java中的父子类的概念是相对的
>Java中一个父类可以被多个子类继承，反之一个子类只能有一个父类（Java的单继承性）