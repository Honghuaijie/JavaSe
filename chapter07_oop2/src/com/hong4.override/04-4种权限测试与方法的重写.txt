一、测试4中权限修饰
在override包下创建两个package：test1和test2，测试Java中提供的4种权限修饰

实际开发中， 各种修饰符的使用评率如何？
public、private常用，


二、方法的重写（overwrite/override）

1.为什么需要方法的重写？
子类在继承父类以后，就获取了父类中声明的所有方法，但是，父类的方法可能不太适合子类，
换句话说，子类需要对父类中继承过来的方法进行覆盖、覆写的操作

举例（银行账户）

2.何为方法的重写？
子类对父类继承过来的方法进行覆盖、覆写的操作，就成为方法的重写。

3.方法重写应遵循的规则
【复习】方法声明的格式： 权限修饰符 返回值类型 方法名（形参列表） 【throws 异常类型】{方法体}

具体规则：
①父类被重写的方法与子类重写的方法的方法名和形参列表必须相同
②子类重写的方法的权限修饰符不小于父类被重写的方法的权限修饰符
    >子类不能重写父类中声明为private权限修饰的方法
③关于返回值类型：
    >父类被重写的方法的返回值类型是void，则子类重写的方法的返回值类型必须是void
    >父类被重写的方法的返回值类型是基本数据类型，则子类重写的方法的返回值类型必须与被重写方法的返回值类型相同
    >父类被重写的方法的返回值类型是引用数据类型（比如类），
    子类重写的方法的返回值类型可以与父类被重写方法的返回值类型相同 或
                                    与是被重写方法的返回值类型的子类
④子类重写的方法抛出的异常类型必须是父类被重写方法抛出类型相同或者是抛出类型的子类
方法体：没有要求，但是子类重写的方法体必然与父类重写的方法体不同

面试题：区分方法的重载（overload）与重写（override/overwrite)
重载：“两同一不同“
重写：继承以后，子类覆盖父类中同名同参数 的方法











