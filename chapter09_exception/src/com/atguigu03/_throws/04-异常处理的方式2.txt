
异常处理的方式2：throws

1. 格式：
在方法的声明处使用“throws 异常类型1,异常类型2,....";

2. 举例：
public void test() throws 异常类型1,异常类型2{
    //可能存在的编译时异常
}

3. 是否真正处理了异常？
从编译是否能通过的角度看，看成是给出了异常出现时的解决方案，此方案就是，继续向上抛出（throws）。
 >但是，此throws的方式，仅是将可能出现的异常抛给了此方法的调用者。此调用者任然需要考虑如何处理相关异常。
 从这个角度来看，throws的方式不算真正意义上处理了异常.


4. 方法的重写的要求：(针对于编译时异常)
④子类重写的方法抛出的异常类型必须是父类被重写方法抛出类型相同或者是抛出类型的子类
(子类抛出的异常必须和父类抛出的异常相同或者是父类抛出异常的子类)

5. 开发中，如何选择异常处理的两种方式？(重要、经验之谈)
>资源一定要别执行，try--catch--finally
>重写，try--catch--finally
>开发中，方法a中调用了b，c，d，方法b，c，d是递进关系。此时如果方法b，c，d中出现了异常
   我们通常使用throws抛出，而方法a中通过try--catch--finally




