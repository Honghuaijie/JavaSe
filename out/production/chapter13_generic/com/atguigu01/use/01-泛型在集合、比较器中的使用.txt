
1. 什么是泛型？
所谓泛型，就是允许在定义类、接口时通过一个标识表示类中某个属性的类型或某个方法的返回值或参数的类型。
这个类型参数将在使用时（例如，继承或实现这个接口、创建对象或调用方法时）确定（即传入实际的类型参数，也成为类型参数）。

允许你在定义类、接口时，给类中的一个属性的类型或者方法的返回值类型设置一个标识符，
这个类型在当你继承类或者实现接口的时候确定

对集合来讲，把集合中的内容限制为一个数据类型， 这就是泛型的核心思想

2. 在集合中使用泛型之前可能存在的问题
问题1：类型不安全，因为add()的参数是Object类型，意味着如何类型的对象都可以添加成功
问题2：需要使用强转操作，繁琐。还有可能导致ClassCastException异常。


3. 在集合、比较器中使用泛型 (重点)



4.使用说明
> 集合框架在声明接口和其实现类时，使用了泛型（JDK5.0），在实例化集合对象时，
   如果没有使用泛型， 则认为操作的是Object类型的数据。
   如果使用了泛型，则需要指明泛型的具体类型，一旦指明了泛型的具体类型，则在集合的相关的方法中，
   凡是使用泛型的位置都替换为具体的泛型类型