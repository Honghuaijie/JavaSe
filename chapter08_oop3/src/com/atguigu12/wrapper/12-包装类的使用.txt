
包装类的使用
1. 为什么要使用包装类？
为了使得基本数据类型的变量具备引用数据类型变量的相关特征（比如：封装，继承性、多态性），
我们给各个基本数据类型的变量都提供了对应的包装类


2. 掌握基本数据类型对应的包装类类型
byte > Byte
short > Short
int > Integer
long >Long
float > Float
double >Double


char > Character
boolean >  Boolean

3. 掌握基本数据类型 与 包装类之间的转换。
   3.1 为什么需要转换
   >一方面，在有些场景下，需要使用基本数据类型对应的包装类的对象
   此时就需要将基本数据类型的变量，转换为包装类的对象。
   >对于包装类来讲既然我们使用的是对象，那么对象不能进行 +、-、*、/ 等运算。
   为了能过进行这些运算，就需要将包装类的对象转换为基本数据类型的变量

   3.2 如何转换：
         基本数据类型 -->包装类：①使用包装类的构造器 ②（建议）调用包装类的valueOf(xxx xx)
         包装类 -->基本数据类型:调用包装类中的xxxValue()

         注意：原来使用基本数据类型的位置 ，改成包装类以后，对于成员变量来说，其默认值变化乐！

         JDK5.0新特性：自动装箱、自动拆箱

4. String 与 基本数据类型、包装类之间的转换。

   基本数据类型、包装类 ---> String类型：①调用String的重载的静态方法valueOf(xxx xx)
                                   ②：基本数据类型 + ""
        String类型 ---> 基本数据类型、包装类:调用包装类的静态方法：parseXxx()



