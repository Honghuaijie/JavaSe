
类的成员之五：内部类

1. 什么是内部类？
将一个类A定义在另一个类B里面，里面的那个类A就称为“内部类（innerClass)”,类B则称为“外部类“(outerClass)


2. 为什么需要内部类？
遵循高内聚，低耦合的面向对象开发原则

3. 内部类使用举例：(参考变量的分类）
Thread类内部声明了state类，表示线程的声明周期
HashMap类中声明了一个Node类，表示封装的key和value


4. 内部类的分类：（参考变量的分类）
    >成员内部类：直接声明在外部类的里面，方法的外面
        >使用static修饰：静态的成员内部类
        >不使用static修饰：非静态的成员内部类

    >局部内部类：声明在方法内、构造器内、代码块内的内部类
        >匿名的局部内部类
        >非匿名的局部内部类



5. 内部类这节要讲的知识：
>成员内部类的理解
>如何创建成员内部类的实例
>如何在成员内部类中调用外部类的结构
>局部内部类的基本使用


6. 关于成员内部类的理解：
>从类的角度看：
    - 内部可以声明属性、方法、构造器、代码块、内部类等结构
    - 此内部类可以声明父类，可以实现接口
    - 可以谁用final修饰
    - 可以使用abstract修饰


>从外部类的成员的角度看
    - 在内部可以调用外部类的结构
    - 用权限修饰符进行修饰，private，缺省、protected、public
    - 可以使用static修饰

7. 关于局部内部类的说明






